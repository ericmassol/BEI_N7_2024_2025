# **Code pour Microcontr√¥leur : Capteur d'Effort et Armement du Module**

## **Pr√©sentation**
Ce projet impl√©mente un syst√®me de contr√¥le pour un microcontr√¥leur qui g√®re un **capteur d'effort** et permet **l'armement d'un module**.  
Le syst√®me :
- **Surveille** un capteur d'effort.
- **V√©rifie** les autorisations de l'op√©rateur et de s√©paration.
- **D√©clenche** le signal d'armement si toutes les conditions sont r√©unies.
- **Affiche** les autorisations via des LEDs de d√©bogage.
- **G√®re** un d√©lai avant le d√©clenchement du signal d‚Äôarmement.

---

## **Fonctionnalit√©s**
### 1Ô∏è‚É£ Surveillance du Capteur d'Effort  
‚úÖ Lit la valeur d'effort depuis un **capteur analogique**.  
‚úÖ Compare l'effort √† un seuil pr√©d√©fini (**SEUIL_EFFORT**).  

### 2Ô∏è‚É£ Logique d'Armement du Module  
‚úÖ V√©rifie deux **conditions externes** :  
   - **Autorisation de l'op√©rateur** (**ack_operateur**) : garantit que la charge utile est en descente.  
   - **Autorisation de s√©paration** (**ack_separation**) : confirme la s√©paration avec le ballon.  
‚úÖ D√©clenche le signal d'armement lorsque :
   - L'effort est en dessous du seuil.  
   - Les deux autorisations sont valid√©es.  
   - Le **temps d'attente** (**TEMPS_ATTENTE**) est d√©pass√© apr√®s l'atterrissage.  

### 3Ô∏è‚É£ Affichage des Autorisations  
‚úÖ Les **LEDs** indiquent l'√©tat des autorisations :
   - **LED op√©rateur** (**PIN_LED_OPERATEUR**) : √©tat de l‚Äôautorisation de l'op√©rateur.  
   - **LED s√©paration** (**PIN_LED_SEPARATION**) : √©tat de l‚Äôautorisation de s√©paration.  

### 4Ô∏è‚É£ Ex√©cution en Temps R√©el  
‚úÖ Ex√©cute la boucle de surveillance et de contr√¥le **toutes les secondes**.

---

## **Exigences Mat√©rielles**
| Composant              | Broche Microcontr√¥leur |
|------------------------|----------------------|
| **Microcontr√¥leur**    | Carte compatible Arduino |
| **Capteur d'Effort**   | A0 |
| **Entr√©e Autorisation Op√©rateur** | 4 |
| **Entr√©e Autorisation S√©paration** | 5 |
| **Sortie Signal d'Armement** | 6 |
| **LED Autorisation Op√©rateur** | 8 |
| **LED Autorisation S√©paration** | 7 |

---

## **D√©tails du Code**

### üîë **Variables Cl√©s**
- **SEUIL_EFFORT** : Seuil d'effort pour d√©clencher l‚Äôarmement (**par d√©faut : 10**).
- **TEMPS_ATTENTE** : Temps d'attente avant l‚Äôarmement apr√®s l'atterrissage (**par d√©faut : 10**).
- **maf** : Indique si le signal d'armement a √©t√© d√©clench√©.
- **ack_operateur** : Indique si l'autorisation de l'op√©rateur est accord√©e.
- **ack_separation** : Indique si l'autorisation de s√©paration est accord√©e.

### üîß **Fonctions**
1. **maf_deventement(float effort, bool ack_operateur, bool ack_separation, int &temps)**  
   - √âvalue les conditions pour d√©clencher le signal d'armement.  
   - V√©rifie le **seuil d‚Äôeffort**, les **autorisations**, et le **d√©lai d‚Äôattente**.  
   - Active la broche de sortie si toutes les conditions sont r√©unies.  

---

## **Configuration**
1. **Configuration des Broches :**  
   - Entr√©e capteur d'effort (**A0**).  
   - Entr√©es des autorisations (**4 & 5**).  
   - Sortie signal d'armement (**6**).  
   - LEDs de d√©bogage (**7 & 8**).  

2. **Initialisation :**  
   - Le signal d'armement est initialis√© √† **LOW**.  
   - LEDs √©teintes par d√©faut.  

---

## **Boucle Principale**
1. Lit les valeurs du **capteur d'effort**.  
2. Lit l‚Äô√©tat des **autorisations** et affiche sur **les LEDs**.  
3. V√©rifie les conditions d'**armement**.  
4. D√©clenche ou non le **signal de mise √† feu**.  
5. Attente d'**1 seconde** avant la prochaine it√©ration.  

---

## **Instructions d'Utilisation**
1. **Connectez** les composants aux broches sp√©cifi√©es.  
2. **T√©l√©chargez** le code sur le microcontr√¥leur.  
3. **Alimentez** le syst√®me et observez le comportement :  
   - V√©rifiez les **autorisations** via les LEDs.  
   - V√©rifiez que le signal d'armement se d√©clenche **uniquement dans des conditions valides**.  

---

## **Gestion de la M√©moire**
üîπ **Non impl√©ment√©e dans cette version**.  
üîπ Pour une future version :  
   - Ajout d‚Äôune fonction de sauvegarde en EEPROM.  
   - Gestion du **d√©bordement m√©moire** avec une **plage d‚Äôadresses limit√©e**.  

---

## **Remarques**
‚úÖ Assurez-vous que **SEUIL_EFFORT** et **TEMPS_ATTENTE** sont configur√©s selon vos besoins.  
‚úÖ Les LEDs aident √† **d√©boguer les autorisations**.  
‚úÖ La gestion m√©moire n‚Äôest **pas encore test√©e**.  

---

üìå **Auteur(s) :** Equipe BEI √©tudiants
üìÜ **Derni√®re mise √† jour :** 29/01/25
